
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type CollectionPageQueryQueryVariables = Exact<{
  id: Scalars['String'];
}>;


export type CollectionPageQueryQuery = { cmsSeo: Maybe<{ seo: Maybe<{ siteMetadata: Maybe<{ titleTemplate: Maybe<string>, title: Maybe<string>, description: Maybe<string> }> }> }>, storeCollection: Maybe<{ seo: { title: string, description: string }, fields: Maybe<{ searchParams: Maybe<{ sort: Maybe<string>, selectedFacets: Maybe<Array<Maybe<{ key: Maybe<string>, value: Maybe<string> }>>> }>, plp: Maybe<{ sections: Array<{ name: string, props: any }> }> }> }> };


// Query Related Code

export const CollectionPageQuery = {
  query: process.env.NODE_ENV === 'production' ? undefined : "query CollectionPageQuery($id: String!) {\n  cmsSeo {\n    seo {\n      siteMetadata {\n        titleTemplate\n        title\n        description\n      }\n    }\n  }\n  storeCollection(id: {eq: $id}) {\n    seo {\n      title\n      description\n    }\n    fields {\n      searchParams {\n        sort\n        selectedFacets {\n          key\n          value\n        }\n      }\n      plp {\n        sections {\n          name\n          props\n        }\n      }\n    }\n  }\n}\n",
  sha256Hash: "73223ae803c5e203703ce366bea438e3e5e8025ee078b7519d35db5370c1b343",
  operationName: "CollectionPageQuery",
}

