
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type NavlinksQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type NavlinksQueryQuery = { allStoreCollection: { nodes: Array<{ slug: string, seo: { title: string } }> } };


// Query Related Code

export const NavlinksQuery = {
  query: process.env.NODE_ENV === 'production' ? undefined : "query NavlinksQuery {\n  allStoreCollection(limit: 2) {\n    nodes {\n      slug\n      seo {\n        title\n      }\n    }\n  }\n}\n",
  sha256Hash: "f91bb8c3aa2f0578874f5cc19c61cb3215c9f29bfa44dccbdb4615fe77c63725",
  operationName: "NavlinksQuery",
}

